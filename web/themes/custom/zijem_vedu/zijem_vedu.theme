<?php

/**
 * @file
 * Functions to support theming in the zijem_vedu theme.
 */

use Drupal\Core\Menu\MenuTreeParameters;
use Drupal\simplenews\Subscription\SubscriptionManager;
use Drupal\views\ViewExecutable;

/**
 * Implements hook_preprocess_HOOK() for html.html.twig.
 */
function zijem_vedu_preprocess_html(array &$variables) {
  /* Add class to html tag */
  //$variables['html_attributes']->addClass('no-js');

  // Don't display the site name twice on the front page (and potentially others)
  /*if (isset($variables['head_title_array']['title']) && isset($variables['head_title_array']['name']) && ($variables['head_title_array']['title'] == $variables['head_title_array']['name'])) {
    $variables['head_title'] = $variables['head_title_array']['name'];
  }*/
}

/**
 * Implements hook_page_attachments_alter().
 */
function zijem_vedu_page_attachments_alter(array &$page) {
  // Tell IE to use latest rendering engine (not to use compatibility mode).
  /*$ie_edge = [
    '#type' => 'html_tag',
    '#tag' => 'meta',
    '#attributes' => [
    'http-equiv' => 'X-UA-Compatible',
    'content' => 'IE=edge',
    ],
  ];
  $page['#attached']['html_head'][] = [$ie_edge, 'ie_edge'];*/
}

/**
 * Implements hook_preprocess_page() for page.html.twig.
 */
function zijem_vedu_preprocess_page(array &$variables) {
  $display_two_percent = false;
  if (in_array(date('m'), [1, 2, 3])) {
    $display_two_percent = true;
  }
  $variables['display_two_percent'] = $display_two_percent;
  $variables['footer_lower'] = [
    '#theme' => 'footer_block',
  ];
}

/**
 * Implements hook_theme().
 */
function zijem_vedu_theme($existing, $type, $theme, $path) {
  return [
    'footer_block' => [
      'variables' => [],
    ],
  ];
}

/**
 * Implements hook_theme_suggestions_page_alter().
 */
function zijem_vedu_theme_suggestions_page_alter(array &$suggestions, array $variables) {

}

/**
 * Implements hook_theme_suggestions_node_alter().
 */
function zijem_vedu_theme_suggestions_node_alter(array &$suggestions, array $variables) {
  /*$node = $variables['elements']['#node'];

  if ($variables['elements']['#view_mode'] == "full") {

  }*/
}

/**
 * Implements hook_preprocess_HOOK() for Block document templates.
 */
function zijem_vedu_preprocess_block(array &$variables) {

}

/**
 * Implements hook_theme_suggestions_field_alter().
 */
function zijem_vedu_theme_suggestions_field_alter(array &$suggestions, array $variables) {
  /*$element = $variables['element'];
  $suggestions[] = 'field__' . $element['#view_mode'];
  $suggestions[] = 'field__' . $element['#view_mode'] . '__' . $element['#field_name'];*/
}

/**
 * Implements hook_theme_suggestions_field_alter().
 */
function zijem_vedu_theme_suggestions_fieldset_alter(array &$suggestions, array $variables) {
  /*$element = $variables['element'];
  if (isset($element['#attributes']['class']) && in_array('form-composite', $element['#attributes']['class'])) {
    $suggestions[] = 'fieldset__form_composite';
  }*/
}

/**
 * Implements hook_preprocess_node().
 */
function zijem_vedu_preprocess_node(array &$variables) {
  // Default to turning off byline/submitted.
  //$variables['display_submitted'] = FALSE;
}

/**
 * Implements hook_theme_suggestions_views_view_alter().
 */
function zijem_vedu_theme_suggestions_views_view_alter(array &$suggestions, array $variables) {
  $suggestions[] = 'views_view__' . $variables['view']->id();
}

/**
 * Implements hook_views_pre_render().
 */
function zijem_vedu_views_pre_render(ViewExecutable $view) {
  if ($view->id() == 'taxonomy_term') {
    $title = $view->getTitle(); // Get view title.
    $view->setTitle('Obsah pre #' . $title); // Set new title
  }
}

/**
 * Implements hook_preprocess_form().
 */
function zijem_vedu_preprocess_form(array &$variables) {
  //$variables['attributes']['novalidate'] = 'novalidate';
}

function zijem_vedu_preprocess_input(array &$variables) {
  $variables['element']['#attributes']['class'][] = 'form-control';
  /*
  if(isset($variables['element']['#type']) && in_array($variables['element']['#type'], ['textfield', 'password', 'email', 'textarea'])) {
    $variables['element']['#attributes']['placeholder'] = $variables['element']['#description'];
  }
  */
}

/**
 * Implements hook_preprocess_select().
 */
function zijem_vedu_preprocess_select(array &$variables) {
  //$variables['attributes']['class'][] = 'select-chosen';
}

/**
 * Implements hook_preprocess_field().
 */
function zijem_vedu_preprocess_field(array &$variables, $hook) {
  switch ($variables['element']['#field_name']) {
    case 'field_kategoria':
      break;
  }
}

/**
 * Implements hook_preprocess_details().
 */
function zijem_vedu_preprocess_details(array &$variables) {
  /*$variables['attributes']['class'][] = 'details';
  $variables['summary_attributes']['class'] = 'summary';*/
}

/**
 * Implements hook_theme_suggestions_details_alter().
 */
function zijem_vedu_theme_suggestions_details_alter(array &$suggestions, array $variables) {

}

/**
 * Implements hook_preprocess_menu_local_task().
 */
function zijem_vedu_preprocess_menu_local_task(array &$variables) {
  //$variables['element']['#link']['url']->setOption('attributes', ['class'=>'rounded']);
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 *
 * Add views unformatted template suggestions.
 *
 * @inheritdoc
 */
function zijem_vedu_theme_suggestions_views_view_unformatted_alter(array &$suggestions, array $variables) {
  $suggestions[] = 'views_view_unformatted__' . $variables['view']->id();
}

function zijem_vedu_preprocess_taxonomy_term(array &$variables) {
  // does not work for some reason
}

